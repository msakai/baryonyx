os: Visual Studio 2019
branches:
  only:
    - master
    - test
    - next

environment:
  matrix:
    - COMPILER: msvc
      GENERATOR: Visual Studio 16 2019
      PLATFORM: x64
      BUILD_TYPE: Debug

    - COMPILER: msvc
      GENERATOR: Visual Studio 16 2019
      PLATFORM: x64
      BUILD_TYPE: Release

    - COMPILER: msvc
      GENERATOR: Visual Studio 16 2019
      PLATFORM: Win32
      BUILD_TYPE: Debug

    - COMPILER: msvc
      GENERATOR: Visual Studio 16 2019
      PLATFORM: Win32
      BUILD_TYPE: Release

install:
  - echo Installing %COMPILER% %PLATFORM% %BUILD_TYPE%
  - git submodule -q update --init --recursive
  - if defined BINDIR (set "PATH=%BINDIR%;%PATH%")

build_script:
  - md build
  - cd build
  - cmake -G "%GENERATOR%" -DCMAKE_BUILD_TYPE="%BUILD_TYPE%" -DCMAKE_SH=CMAKE_SH-NOTFOUND -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\baryonyx ..
  - if "%COMPILER%"=="msvc" cmake --build . --config "%BUILD_TYPE%"
  - if "%COMPILER%"=="msvc" cmake --build . --config "%BUILD_TYPE%" --target install
  - if not "%COMPILER%"=="msvc" cmake --build .
  - if not "%COMPILER%"=="msvc" cmake --build . --target install
  - ctest --output-on-failure --verbose -C "%BUILD_TYPE%" -E testoptimizer

after_build:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - cmd: 7z a baryonyx-%COMPILER%-%PLATFORM%-%BUILD_TYPE%.zip baryonyx

artifacts:
  - path: baryonyx-%COMPILER%-%PLATFORM%-%BUILD_TYPE%.zip
    name: app
